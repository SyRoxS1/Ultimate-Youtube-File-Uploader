
import enum 

from pydantic import BaseModel, ValidationError
closewhen100percentOptions = [
    "go next after uploading success",
    "go next after processing success",
    "go next after copyright check success",
]
# 0 go next after uploading success,
# 1 go next after processing success,
# 2 go next after copyright check success,
# there are 4 steps:uploading,Upload complete ... Processing will begin shortly,处理中，画质最高可为标清 ... 还剩 8 分钟,Checks complete. No issues found.
# after uploding,there is a video link
# after check, there is a text shows Checks complete. No issues found. and the progress bar of check is selected
closewhen100percentType = enum.Enum('closewhen100percentType', (
    'go next after uploading success',
    'go next after processing success',
    'go next after copyright check success'
    ))
availableScheduleTimes = [
    "0:00",
    "0:15",
    "0:30",
    "0:45",
    "1:00",
    "1:15",
    "1:30",
    "1:45",
    "2:00",
    "2:15",
    "2:30",
    "2:45",
    "3:00",
    "3:15",
    "3:30",
    "3:45",
    "4:00",
    "4:15",
    "4:30",
    "4:45",
    "5:00",
    "5:15",
    "5:30",
    "5:45",
    "6:00",
    "6:15",
    "6:30",
    "6:45",
    "7:00",
    "7:15",
    "7:30",
    "7:45",
    "8:00",
    "8:15",
    "8:30",
    "8:45",
    "9:00",
    "9:15",
    "9:30",
    "9:45",
    "10:00",
    "10:15",
    "10:30",
    "10:45",
    "11:00",
    "11:15",
    "11:30",
    "11:45",
    "12:00",
    "12:15",
    "12:30",
    "12:45",
    "13:00",
    "13:15",
    "13:30",
    "13:45",
    "14:00",
    "14:15",
    "14:30",
    "14:45",
    "15:00",
    "15:15",
    "15:30",
    "15:45",
    "16:00",
    "16:15",
    "16:30",
    "16:45",
    "17:00",
    "17:15",
    "17:30",
    "17:45",
    "18:00",
    "18:15",
    "18:30",
    "18:45",
    "19:00",
    "19:15",
    "19:30",
    "19:45",
    "20:00",
    "20:15",
    "20:30",
    "20:45",
    "21:00",
    "21:15",
    "21:30",
    "21:45",
    "22:00",
    "22:15",
    "22:30",
    "22:45",
    "23:00",
    "23:15",
    "23:30",
    "23:45",
]

availableScheduleTimeSlotType = enum.Enum('availableScheduleTimeSlotType', (
    "0:00",
    "0:15",
    "0:30",
    "0:45",
    "1:00",
    "1:15",
    "1:30",
    "1:45",
    "2:00",
    "2:15",
    "2:30",
    "2:45",
    "3:00",
    "3:15",
    "3:30",
    "3:45",
    "4:00",
    "4:15",
    "4:30",
    "4:45",
    "5:00",
    "5:15",
    "5:30",
    "5:45",
    "6:00",
    "6:15",
    "6:30",
    "6:45",
    "7:00",
    "7:15",
    "7:30",
    "7:45",
    "8:00",
    "8:15",
    "8:30",
    "8:45",
    "9:00",
    "9:15",
    "9:30",
    "9:45",
    "10:00",
    "10:15",
    "10:30",
    "10:45",
    "11:00",
    "11:15",
    "11:30",
    "11:45",
    "12:00",
    "12:15",
    "12:30",
    "12:45",
    "13:00",
    "13:15",
    "13:30",
    "13:45",
    "14:00",
    "14:15",
    "14:30",
    "14:45",
    "15:00",
    "15:15",
    "15:30",
    "15:45",
    "16:00",
    "16:15",
    "16:30",
    "16:45",
    "17:00",
    "17:15",
    "17:30",
    "17:45",
    "18:00",
    "18:15",
    "18:30",
    "18:45",
    "19:00",
    "19:15",
    "19:30",
    "19:45",
    "20:00",
    "20:15",
    "20:30",
    "20:45",
    "21:00",
    "21:15",
    "21:30",
    "21:45",
    "22:00",
    "22:15",
    "22:30",
    "22:45",
    "23:00",
    "23:15",
    "23:30",
    "23:45"
    ))
PublishpolicyOptions = [0, 1, 2]
# 0 -private
# 1-publish
# 2-schedule

PublishpolicyType = enum.Enum('PublishpolicyType', (
    'private',
    'publish',
    'schedule',
    'public&premiere',

#     "private", "premium_only", "subscriber_only", "needs_auth", or "public"
    "unlisted" 
    ))
VideoLanguageOptions = [
    "Not applicable",
    "Abkhazian",
    "Afar",
    "Afrikaans",
    "Akan",
    "Akkadian",
    "Albanian",
    "American Sign Language",
    "Amharic",
    "Arabic",
    "Aramaic",
    "Armenian",
    "Assamese",
    "Aymara",
    "Azerbaijani",
    "Bambara",
    "Bangla",
    "Bashkir",
    "Basque",
    "Belarusian",
    "Bhojpuri",
    "Bislama",
    "Bodo",
    "Bosnian",
    "Breton",
    "Bulgarian",
    "Burmese",
    "Cantonese",
    "Cantonese (Hong Kong)",
    "Catalan",
    "Cherokee",
    "Chinese",
    "Chinese (China)",
    "Chinese (Hong Kong)",
    "Chinese (Simplified)",
    "Chinese (Singapore)",
    "Chinese (Taiwan)",
    "Chinese (Traditional)",
    "Choctaw",
    "Coptic",
    "Corsican",
    "Cree",
    "Croatian",
    "Czech",
    "Danish",
    "Dogri",
    "Dutch",
    "Dutch (Belgium)",
    "Dutch (Netherlands)",
    "Dzongkha",
    "English",
    "English (Canada)",
    "English (India)",
    "English (Ireland)",
    "English (United Kingdom)",
    "English (United States)",
    "Esperanto",
    "Estonian",
    "Ewe",
    "Faroese",
    "Fijian",
    "Filipino",
    "Finnish",
    "French",
    "French (Belgium)",
    "French (Canada)",
    "French (France)",
    "French (Switzerland)",
    "Fula",
    "Galician",
    "Ganda",
    "Georgian",
    "German",
    "German (Austria)",
    "German (Germany)",
    "German (Switzerland)",
    "Greek",
    "Guarani",
    "Gujarati",
    "Gusii",
    "Haitian Creole",
    "Hakka Chinese",
    "Hakka Chinese (Taiwan)",
    "Haryanvi",
    "Hausa",
    "Hawaiian",
    "Hebrew",
    "Hindi",
    "Hindi (Latin)",
    "Hiri Motu",
    "Hungarian",
    "Icelandic",
    "Igbo",
    "Indonesian",
    "Interlingua",
    "Interlingue",
    "Inuktitut",
    "Inupiaq",
    "Irish",
    "Italian",
    "Japanese",
    "Javanese",
    "Kalaallisut",
    "Kalenjin",
    "Kamba",
    "Kannada",
    "Kashmiri",
    "Kazakh",
    "Khmer",
    "Kikuyu",
    "Kinyarwanda",
    "Klingon",
    "Konkani",
    "Korean",
    "Kurdish",
    "Kyrgyz",
    "Ladino",
    "Lao",
    "Latin",
    "Latvian",
    "Lingala",
    "Lithuanian",
    "Luba-Katanga",
    "Luo",
    "Luxembourgish",
    "Luyia",
    "Macedonian",
    "Maithili",
    "Malagasy",
    "Malay",
    "Malayalam",
    "Maltese",
    "Manipuri",
    "Māori",
    "Marathi",
    "Masai",
    "Meru",
    "Min Nan Chinese",
    "Min Nan Chinese (Taiwan)",
    "Mixe",
    "Mizo",
    "Mongolian",
    "Mongolian (Mongolian)",
    "Nauru",
    "Navajo",
    "Nepali",
    "Nigerian Pidgin",
    "North Ndebele",
    "Northern Sotho",
    "Norwegian",
    "Occitan",
    "Odia",
    "Oromo",
    "Papiamento",
    "Pashto",
    "Persian",
    "Persian (Afghanistan)",
    "Persian (Iran)",
    "Polish",
    "Portuguese",
    "Portuguese (Brazil)",
    "Portuguese (Portugal)",
    "Punjabi",
    "Quechua",
    "Romanian",
    "Romanian (Moldova)",
    "Romansh",
    "Rundi",
    "Russian",
    "Russian (Latin)",
    "Samoan",
    "Sango",
    "Sanskrit",
    "Santali",
    "Sardinian",
    "Scottish Gaelic",
    "Serbian",
    "Serbian (Cyrillic)",
    "Serbian (Latin)",
    "Serbo-Croatian",
    "Sherdukpen",
    "Shona",
    "Sicilian",
    "Sindhi",
    "Sinhala",
    "Slovak",
    "Slovenian",
    "Somali",
    "South Ndebele",
    "Southern Sotho",
    "Spanish",
    "Spanish (Latin America)",
    "Spanish (Mexico)",
    "Spanish (Spain)",
    "Spanish (United States)",
    "Sundanese",
    "Swahili",
    "Swati",
    "Swedish",
    "Tagalog",
    "Tajik",
    "Tamil",
    "Tatar",
    "Telugu",
    "Thai",
    "Tibetan",
    "Tigrinya",
    "Tok Pisin",
    "Toki Pona",
    "Tongan",
    "Tsonga",
    "Tswana",
    "Turkish",
    "Turkmen",
    "Twi",
    "Ukrainian",
    "Urdu",
    "Uyghur",
    "Uzbek",
    "Venda",
    "Vietnamese",
    "Volapük",
    "Võro",
    "Welsh",
    "Western Frisian",
    "Wolaytta",
    "Wolof",
    "Xhosa",
    "Yiddish",
    "Yoruba",
    "Zulu",
]


VideoLanguageType = enum.Enum('CaptionsCertificationType', (
       "Not applicable",
    "Abkhazian",
    "Afar",
    "Afrikaans",
    "Akan",
    "Akkadian",
    "Albanian",
    "American Sign Language",
    "Amharic",
    "Arabic",
    "Aramaic",
    "Armenian",
    "Assamese",
    "Aymara",
    "Azerbaijani",
    "Bambara",
    "Bangla",
    "Bashkir",
    "Basque",
    "Belarusian",
    "Bhojpuri",
    "Bislama",
    "Bodo",
    "Bosnian",
    "Breton",
    "Bulgarian",
    "Burmese",
    "Cantonese",
    "Cantonese (Hong Kong)",
    "Catalan",
    "Cherokee",
    "Chinese",
    "Chinese (China)",
    "Chinese (Hong Kong)",
    "Chinese (Simplified)",
    "Chinese (Singapore)",
    "Chinese (Taiwan)",
    "Chinese (Traditional)",
    "Choctaw",
    "Coptic",
    "Corsican",
    "Cree",
    "Croatian",
    "Czech",
    "Danish",
    "Dogri",
    "Dutch",
    "Dutch (Belgium)",
    "Dutch (Netherlands)",
    "Dzongkha",
    "English",
    "English (Canada)",
    "English (India)",
    "English (Ireland)",
    "English (United Kingdom)",
    "English (United States)",
    "Esperanto",
    "Estonian",
    "Ewe",
    "Faroese",
    "Fijian",
    "Filipino",
    "Finnish",
    "French",
    "French (Belgium)",
    "French (Canada)",
    "French (France)",
    "French (Switzerland)",
    "Fula",
    "Galician",
    "Ganda",
    "Georgian",
    "German",
    "German (Austria)",
    "German (Germany)",
    "German (Switzerland)",
    "Greek",
    "Guarani",
    "Gujarati",
    "Gusii",
    "Haitian Creole",
    "Hakka Chinese",
    "Hakka Chinese (Taiwan)",
    "Haryanvi",
    "Hausa",
    "Hawaiian",
    "Hebrew",
    "Hindi",
    "Hindi (Latin)",
    "Hiri Motu",
    "Hungarian",
    "Icelandic",
    "Igbo",
    "Indonesian",
    "Interlingua",
    "Interlingue",
    "Inuktitut",
    "Inupiaq",
    "Irish",
    "Italian",
    "Japanese",
    "Javanese",
    "Kalaallisut",
    "Kalenjin",
    "Kamba",
    "Kannada",
    "Kashmiri",
    "Kazakh",
    "Khmer",
    "Kikuyu",
    "Kinyarwanda",
    "Klingon",
    "Konkani",
    "Korean",
    "Kurdish",
    "Kyrgyz",
    "Ladino",
    "Lao",
    "Latin",
    "Latvian",
    "Lingala",
    "Lithuanian",
    "Luba-Katanga",
    "Luo",
    "Luxembourgish",
    "Luyia",
    "Macedonian",
    "Maithili",
    "Malagasy",
    "Malay",
    "Malayalam",
    "Maltese",
    "Manipuri",
    "Māori",
    "Marathi",
    "Masai",
    "Meru",
    "Min Nan Chinese",
    "Min Nan Chinese (Taiwan)",
    "Mixe",
    "Mizo",
    "Mongolian",
    "Mongolian (Mongolian)",
    "Nauru",
    "Navajo",
    "Nepali",
    "Nigerian Pidgin",
    "North Ndebele",
    "Northern Sotho",
    "Norwegian",
    "Occitan",
    "Odia",
    "Oromo",
    "Papiamento",
    "Pashto",
    "Persian",
    "Persian (Afghanistan)",
    "Persian (Iran)",
    "Polish",
    "Portuguese",
    "Portuguese (Brazil)",
    "Portuguese (Portugal)",
    "Punjabi",
    "Quechua",
    "Romanian",
    "Romanian (Moldova)",
    "Romansh",
    "Rundi",
    "Russian",
    "Russian (Latin)",
    "Samoan",
    "Sango",
    "Sanskrit",
    "Santali",
    "Sardinian",
    "Scottish Gaelic",
    "Serbian",
    "Serbian (Cyrillic)",
    "Serbian (Latin)",
    "Serbo-Croatian",
    "Sherdukpen",
    "Shona",
    "Sicilian",
    "Sindhi",
    "Sinhala",
    "Slovak",
    "Slovenian",
    "Somali",
    "South Ndebele",
    "Southern Sotho",
    "Spanish",
    "Spanish (Latin America)",
    "Spanish (Mexico)",
    "Spanish (Spain)",
    "Spanish (United States)",
    "Sundanese",
    "Swahili",
    "Swati",
    "Swedish",
    "Tagalog",
    "Tajik",
    "Tamil",
    "Tatar",
    "Telugu",
    "Thai",
    "Tibetan",
    "Tigrinya",
    "Tok Pisin",
    "Toki Pona",
    "Tongan",
    "Tsonga",
    "Tswana",
    "Turkish",
    "Turkmen",
    "Twi",
    "Ukrainian",
    "Urdu",
    "Uyghur",
    "Uzbek",
    "Venda",
    "Vietnamese",
    "Volapük",
    "Võro",
    "Welsh",
    "Western Frisian",
    "Wolaytta",
    "Wolof",
    "Xhosa",
    "Yiddish",
    "Yoruba",
    "Zulu" 
    ))

CaptionsCertificationOptions = [0, 1, 2, 3, 4, 5]

# 0-        None
# 1-This content has never aired on television in the U.S.
# 2-This content has only aired on television in the U.S. without captions
# 3-This content has not aired on U.S. television with captions since September 30, 2012.
# 4-This content does not fall within a category of online programming that requires captions under FCC regulations (47 C.F.R. § 79).
# 5-The FCC and/or U.S. Congress has granted an exemption from captioning requirements for this content.
CaptionsCertificationType = enum.Enum('CaptionsCertificationType', (
    'This content has never aired on television in the U.S',
    'This content has only aired on television in the U.S. without captions',
    'This content has not aired on U.S. television with captions since September 30, 2012',
    'This content does not fall within a category of online programming that requires captions under FCC regulations (47 C.F.R. § 79).',
    'The FCC and/or U.S. Congress has granted an exemption from captioning requirements for this content.'
    ))
LicenceTypeOptions = [0, 1]
# 0-'Standard YouTube License',
# 1-Creative Commons - Attribution

class LicenceType(enum.Enum):
    StandardYouTubeLicense = 0 # Sun的value被设定为0
    CreativeCommonsAttribution = 1

ShortsremixingTypeOptions = [0, 1, 2]
ShortsremixingType = enum.Enum('ShortsremixingType', ('Allow video and audio remixing', 'Allow only audio remixing', 'Don’t allow remixing'))

# 0-  Allow video and audio remixing
# 1-    Allow only audio remixing
# 2-   Don’t allow remixing
CategoryOptions = [
    "Autos & Vehicles",
    "Comedy",
    "Education",
    "Entertainment",
    "Film & Animation",
    "Gaming",
    "Howto & Style",
    "Music",
    "News & Politics",
    "Nonprofits & Activism",
    "People & Blogs",
    "Pets & Animals",
    "Science & Technology",
    "Sports",
    "Travel & Events",
]
CategoryType = enum.Enum('CategoryType', (    
    "Autos & Vehicles",
    "Comedy",
    "Education",
    "Entertainment",
    "Film & Animation",
    "Gaming",
    "Howto & Style",
    "Music",
    "News & Politics",
    "Nonprofits & Activism",
    "People & Blogs",
    "Pets & Animals",
    "Science & Technology",
    "Sports",
    "Travel & Events"))

CommentsRatingsPolicyOptions = [0, 1, 2, 3, 4]
# 0-Allow all comments
# 1-Hold potentially inappropriate comments for review
# 2-Increase strictness
# 3-Hold all comments for review
# 4-Disable comments
CommentsRatingsPolicyType = enum.Enum('CommentsRatingsPolicyType', (
    'Allow all comments', 
    'Hold potentially inappropriate comments for review', 
    'Increase strictness',
    'Hold all comments for review',
    'Disable comments'
    ))




_SUPPORTED_LANG_CODES = [
        'af', 'az', 'id', 'ms', 'bs', 'ca', 'cs', 'da', 'de', 'et', 'en-IN', 'en-GB', 'en', 'es',
        'es-419', 'es-US', 'eu', 'fil', 'fr', 'fr-CA', 'gl', 'hr', 'zu', 'is', 'it', 'sw', 'lv',
        'lt', 'hu', 'nl', 'no', 'uz', 'pl', 'pt-PT', 'pt', 'ro', 'sq', 'sk', 'sl', 'sr-Latn', 'fi',
        'sv', 'vi', 'tr', 'be', 'bg', 'ky', 'kk', 'mk', 'mn', 'ru', 'sr', 'uk', 'el', 'hy', 'iw',
        'ur', 'ar', 'fa', 'ne', 'mr', 'hi', 'as', 'bn', 'pa', 'gu', 'or', 'ta', 'te', 'kn', 'ml',
        'si', 'th', 'lo', 'my', 'ka', 'am', 'km', 'zh-CN', 'zh-TW', 'zh-HK', 'ja', 'ko'
    ]

class BadgeType(enum.Enum):
    AVAILABILITY_UNLISTED = enum.auto()
    AVAILABILITY_PRIVATE = enum.auto()
    AVAILABILITY_PUBLIC = enum.auto()
    AVAILABILITY_PREMIUM = enum.auto()
    AVAILABILITY_SUBSCRIPTION = enum.auto()
    LIVE_NOW = enum.auto()
    VERIFIED = enum.auto()
class VideoType(str, enum.Enum):
    video =  enum.auto()
    playlist =  enum.auto()
    audio =  enum.auto()
    live =  enum.auto()
    shorts =  enum.auto()